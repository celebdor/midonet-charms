#!/usr/bin/python
#
# Copyright (c) 2015 Midokura SARL, All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
import re
import os
import sys
import setup
import shutil
import socket
import subprocess

from charmhelpers.core import hookenv

from charmhelpers.core.hookenv import (
    Hooks,
    config,
    relation_get,
    relation_ids,
    relation_set,
    related_units,
    unit_get,
)

def node_puppet_create(k_ip, m_api_oip, adm_tkn, zkhosts):
    host_name = subprocess.check_output(["hostname"])
    host_name = host_name.strip()
    url = "http://%s:8080/midonet-api" % m_api_oip
    fd = open("node.pp","w")
    node_def = """
node %s {\n
    midonet_api::install {"%s":\n
    }\n
    ->\n
    midonet_api::configure {"%s":\n
        keystone_admin_token => "%s",\n
        keystone_service_host => "%s",\n
        rest_api_base_url => "%s",\n
        zookeeper_hosts => "%s"\n
    }\n
    ->\n
    midonet_api::start {"%s":\n
    }\n
}
""" %(host_name,
      host_name,
      host_name,
      adm_tkn,
      k_ip,
      url,
      zkhosts,
      host_name)

    fd.write("%s" %node_def)
    fd.close()

def config_zkhosts_midonet_api(zkhost_ips):
    config = hookenv.config()
    zkhosts = []
    os.makedirs("/tmp/midonet", 0755)
    os.chdir("/tmp/midonet")
    host_name =  subprocess.check_output("hostname", shell=True)
    host_ip = socket.gethostbyname(host_name.strip())
    # list the zookeeper server ips
    hostips = zkhost_ips
    ips = list(hostips.split(' '))
    for ip in sorted(ips):
        zkhosts.append("%s" %str(ip))
    key_ip = config['keystone_ip']
    medo_api_ip = config['midonet_api_ip']
    medo_api_oip = config['midonet_api_outer_ip']
    admin_token = "kjhsakjhdgh"
    # create node.pp for puppet
    node_puppet_create(key_ip,
                       medo_api_oip,
                       admin_token,
                       zkhosts)

    cmd = """
ps axufww | grep -v grep | grep ^tomcat | "\
cmd = cmd+"awk '{print $2;}' | xargs -n1 kill -9"""

    subprocess.call(cmd, shell=True)

    repo = config['midonet_puppet_modules']
    branch = config['midonet_puppet_modules_branch']
    git_cmd = "sudo git clone %s --branch %s" %(repo, branch)
    subprocess.check_output(git_cmd, shell=True)
    MODULEPATH = os.getcwd()+'/orizuru/puppet/modules'
    PUPPET_NODE_DEFINITION = os.getcwd()+'/node.pp'
    # execute the puppet apply command
    command = "sudo puppet apply --verbose --show_diff --modulepath=%s %s" %(MODULEPATH, PUPPET_NODE_DEFINITION)
    output = subprocess.check_output(command, shell=True)
    os.chdir("/tmp")
    shutil.rmtree("midonet")

def relation_changed():
    hookenv.log('midonet-api relation  changed with midonet-agent')
    config = hookenv.config()
    print "ZOO_SERVERE =%s\n" % config['zookeeper_hosts']
    print "in ZOO-SERVER RELATION-CHANGED HOOK\n"
    zookeeper_hosts = relation_get('zookeeper_hosts')
    print "ZOOKP HOST in RELATIONCHANGED = %s\n" % zookeeper_hosts
    config['zookeeper_hosts'] = zookeeper_hosts
    print "ZOO_SERVER after RELATION-CHANGED =%s\n" % config['zookeeper_hosts']
    if zookeeper_hosts:
        config_zkhosts_midonet_api(zookeeper_hosts)

if __name__ == "__main__":
    relation_changed()

